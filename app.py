import streamlit as st
import geemap.foliumap as geemap
import ee
from streamlit_folium import st_folium
from google.oauth2 import service_account

# === GEE Initialization with Service Account ===
import ee
import streamlit as st
import json
from google.oauth2 import service_account

SERVICE_ACCOUNT = st.secrets["SERVICE_ACCOUNT"]
credentials_dict = json.loads(st.secrets["CREDENTIALS_JSON"])
credentials = service_account.Credentials.from_service_account_info(credentials_dict)
ee.Initialize(credentials)

# === CONFIG ===
province_name = "Chai Nat"
esa = ee.Image("ESA/WorldCover/v200/2021")
esa_palette = ['006400', 'ffbb22', 'ffff4c', 'f096ff', 'fa0000',
               'b4b4b4', 'f0f0f0', '0064c8', '0096a0', '00cf75',
               'fae6a0', '58481f', '0096ff', '9f6fff', 'fa00fa', 'c5f0ff', 'ffff00']

# === Load ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó ===
roi = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level1") \
         .filter(ee.Filter.eq('ADM1_NAME', province_name))
geometry = roi.geometry()

# === ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ (Bare: 80, Grassland: 30 ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏õ‡πà‡∏≤: 10) ===
vacant_mask = esa.eq(80).Or(esa.eq(30)).And(esa.neq(10))
vacant = esa.updateMask(vacant_mask)

# === ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ===
total_area = geometry.area().divide(1e6)  # ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏°‡∏ï‡∏£ -> ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
vacant_area = vacant.multiply(ee.Image.pixelArea()).reduceRegion(
    reducer=ee.Reducer.sum(), geometry=geometry, scale=30, maxPixels=1e9)
vacant_area_km2 = vacant_area.getNumber('Map').divide(1e6)

# === UI ===
st.set_page_config(layout="wide")
st.title("üåæ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏´‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏Å‡∏£‡πâ‡∏≤‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó")
st.markdown("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å **ESA WorldCover 2020**")

col1, col2, col3 = st.columns(3)
col1.metric("üìè ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î (‡∏ï‡∏£.‡∏Å‡∏°.)", f"{total_area.getInfo():,.2f}")
col2.metric("üåø ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ (‡∏ï‡∏£.‡∏Å‡∏°.)", f"{vacant_area_km2.getInfo():,.2f}")
col3.metric("üìä ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏£‡πâ‡∏≠‡∏¢‡∏•‡∏∞", f"{(vacant_area_km2.getInfo() / total_area.getInfo()) * 100:.2f} %")

# === ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà ===
Map = geemap.Map(center=[15.2, 100.1], zoom=9)
Map.addLayer(esa, {"min": 10, "max": 100, "palette": esa_palette}, "üåç ESA WorldCover 2020")
Map.addLayer(vacant, {"palette": ["red"]}, "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤")
Map.addLayer(roi.style(color='blue', fillColor='00000000', width=2), {}, "‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î")
Map.add_legend(title="WorldCover Legend", builtin_legend='ESA_WorldCover')

st.subheader("üó∫Ô∏è ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤")
st_folium(Map, width=700, height=500)
