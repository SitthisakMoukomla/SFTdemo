import streamlit as st
from streamlit_folium import st_folium
import folium
import altair as alt
import pandas as pd

# === CONFIG ===
st.set_page_config(layout="wide", page_title="Eucalyptus Land Suitability AI")
st.markdown("""
    <style>
        .main { background-color: #f9f9f9; }
        .block-container { padding-top: 1rem; padding-bottom: 1rem; }
        .stButton>button {
            color: white;
            background-color: #4CAF50;
            border-radius: 8px;
            padding: 0.5em 1em;
        }
    </style>
""", unsafe_allow_html=True)

# === TITLE ===
st.title("üõ∞Ô∏è Eucalyptus Land Suitability AI Dashboard")

# === SIDEBAR ===
with st.sidebar:
    st.header("üîé ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")
    province = st.selectbox("üìç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", ["‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ", "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ", "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô", "‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó"])
    slope = st.slider("‚õ∞Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏≤‡∏î‡∏ä‡∏±‡∏ô (%)", 0, 30, (0, 15))
    ndvi = st.slider("üåø NDVI", 0.0, 1.0, 0.5)
    st.markdown("---")
    st.markdown("üëà ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡∏°‡∏∑‡∏≠ ‡πÅ‡∏•‡πâ‡∏ß‡∏î‡∏π‡∏ú‡∏•‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà")

# === CENTER COORDINATES ===
center = {
    "‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ": [14.02, 99.53],
    "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ": [13.53, 99.82],
    "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô": [16.43, 102.83],
    "‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó": [15.18, 100.13]
}[province]

# === MAPTILER ===
MAPTILER_API_KEY = "sBsPycUuqDYYrp3htoRi"  # ‚úÖ ‡πÉ‡∏™‡πà API key ‡∏à‡∏£‡∏¥‡∏á
m = folium.Map(
    location=center,
    zoom_start=9,
    tiles=f"https://api.maptiler.com/maps/hybrid/256/{{z}}/{{x}}/{{y}}.jpg?key={MAPTILER_API_KEY}",
    attr='MapTiler Satellite',
)

# === MARKER MOCK ===
folium.Marker(
    location=center,
    popup=f"‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏ô {province}",
    icon=folium.Icon(color="green", icon="ok-sign")
).add_to(m)
folium.LayerControl().add_to(m)

# === SHOW MAP ===
st.markdown("## üó∫Ô∏è ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢")
st_data = st_folium(m, width=1200, height=600)

# === ON-CLICK ===
if st_data.get("last_clicked"):
    latlon = st_data["last_clicked"]
    st.success(f"üìç ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏Å‡∏±‡∏î: ({latlon['lat']:.4f}, {latlon['lng']:.4f})")

# === SUMMARY ===
st.markdown("## üìä ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô")
col1, col2, col3 = st.columns(3)
col1.metric("‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", province)
col2.metric("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢", "‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 7,500 ‡πÑ‡∏£‡πà")
col3.metric("Suitability Score", "83")

# === CHART SECTION ===
st.markdown("## üìà ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà")

data = pd.DataFrame({
    "‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î": ["‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ", "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ", "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô", "‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó"],
    "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡πÑ‡∏£‡πà)": [7500, 6400, 8300, 5900],
    "‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°": [83, 76, 88, 72]
})

# === Bar Chart ===
bar = alt.Chart(data).mark_bar(cornerRadiusTopLeft=5, cornerRadiusTopRight=5).encode(
    x=alt.X('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', sort='-y'),
    y='‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡πÑ‡∏£‡πà)',
    color=alt.Color('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', legend=None)
).properties(
    title="‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î",
    width=500,
    height=300
)

# === Pie Chart ===
pie_data = data.copy()
pie_data["‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô"] = pie_data["‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡πÑ‡∏£‡πà)"] / pie_data["‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡πÑ‡∏£‡πà)"].sum()
pie = alt.Chart(pie_data).mark_arc(innerRadius=40).encode(
    theta=alt.Theta(field="‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô", type="quantitative"),
    color=alt.Color(field="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", type="nominal"),
    tooltip=["‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡πÑ‡∏£‡πà)"]
).properties(
    title="‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢",
    width=300,
    height=300
)

# === Show Charts ===
col1, col2 = st.columns(2)
col1.altair_chart(bar, use_container_width=True)
col2.altair_chart(pie, use_container_width=True)

